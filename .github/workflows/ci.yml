name: Run tests, coverage, and SonarQube analysis

on: [push, pull_request]

jobs:
  test:
    name: Run tests and coverage
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
      # 1. Check out the code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Set up Python version
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      # 4. Run tests with coverage
      - name: Run unit tests with coverage
        run: |
          pytest --cov --cov-branch --cov-report=xml

      # 5. Run mypy type checking
      - name: Run mypy type checking
        run: |
          python -m mypy src/ --strict

      # 6. Upload coverage report to Codecov
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ajbarea/heartbeat-obstacle-detector

      # 7. Upload coverage report as artifact for SonarQube
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    needs: test # Wait for test job to complete
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      # Download coverage report from test job
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      # Set up Python to run tests and generate coverage
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      # Run SonarQube analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
